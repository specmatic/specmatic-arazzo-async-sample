services:
  location_api:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["uvicorn", "location_api:app", "--host", "0.0.0.0", "--port", "3001"]
    ports:
      - "3001:3001"
    depends_on:
      kafka:
        condition: service_healthy

  order_api:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["uvicorn", "order_api:app", "--host", "0.0.0.0", "--port", "3000"]
    ports:
      - "3000:3000"
    depends_on:
      kafka:
        condition: service_healthy

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:19092,EXTERNAL://localhost:9092,CONTROLLER://kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 12
